variables:
  system.debug: true
  CXX_VER: 17
  CONFIGURATION: 'Debug'

jobs:
- job: Build
  strategy:
      matrix:
        win64_2017:
          imageName: 'vs2017-win2016'
          architecture: 'x64'
          generator_platform: 'x64'
          vcpkg_triplet: 'x64-windows'
          vcvars_path: "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/vc/Auxiliary/build/vcvarsall.bat"
        win32_2017:
          imageName: 'vs2017-win2016'
          architecture: 'x86'
          generator_platform: 'Win32'
          vcpkg_triplet: 'x86-windows'
          vcvars_path: "C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/vc/Auxiliary/build/vcvarsall.bat"
        win64_2019:
          imageName: 'windows-latest'
          architecture: 'x64'
          generator_platform: 'x64'
          vcpkg_triplet: 'x64-windows'
          vcvars_path: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/vc/Auxiliary/build/vcvarsall.bat"
        win32_2019:
          imageName: 'windows-latest'
          architecture: 'x86'
          generator_platform: 'Win32'
          vcpkg_triplet: 'x86-windows'
          vcvars_path: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/vc/Auxiliary/build/vcvarsall.bat"
  pool:
    vmImage: $(imageName)
  steps:
  - script: |
      choco install ninja llvm cmake
    displayName: '[Windows] Install tools'
  - script: |
      @echo off
      call "$(vcvars_path)" $(architecture)
      del "C:\ProgramData\chocolatey\bin\c++.exe"
      del "C:\ProgramData\chocolatey\bin\g++.exe"
      del "C:\ProgramData\chocolatey\bin\gcc.exe"
      del "C:\Strawberry\c\bin\c++.exe"
      del "C:\Strawberry\c\bin\g++.exe"
      del "C:\Strawberry\c\bin\gcc.exe"
      cmake -H. -B_build -GNinja -DCMAKE_CXX_STANDARD=$(CXX_VER) -DCMAKE_INSTALL_PREFIX=$(Build.ArtifactStagingDirectory) -DBUILD_SHARED_LIBS=ON
    displayName: '[Windows] Run cmake'
  - script: |
      @echo off
      call "$(vcvars_path)" $(architecture)
      cmake --build _build --config $(CONFIGURATION) --target install
    failOnStderr: true
    displayName: 'Build project'
